using UnityEngine;
using UnityEngine.SceneManagement;

[RequireComponent(typeof(Rigidbody2D))]
public class Player : MonoBehaviour
{
    public float rotationSmoothSpeed = 5f; 

    public float moveForce = 10f;
    public float maxSpeed = 7f;

    public float bounceForce = 5f;
    public float bounceCooldown = 0.1f;

    private Rigidbody2D rb;
    private float lastBounceTime;

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
    }

    void FixedUpdate()
    {
        ApplyThrust();
        ApplyRotationToVelocity();
    }

    void ApplyThrust()
    {
        float xInput = Input.GetAxisRaw("Horizontal"); // A/D
        float yInput = Input.GetAxisRaw("Vertical");   // W/S

        Vector2 inputDirection = new Vector2(xInput, yInput).normalized;
        Vector2 force = inputDirection * moveForce;

        rb.AddForce(force);
    }

    void ApplyRotationToVelocity()
    {
        if (rb.velocity.sqrMagnitude > 0.1f)
        {
            float angle = Mathf.Atan2(rb.velocity.y, rb.velocity.x) * Mathf.Rad2Deg;
            Quaternion targetRotation = Quaternion.Euler(0, 0, angle);
            transform.rotation = Quaternion.Lerp(transform.rotation, targetRotation, Time.fixedDeltaTime * rotationSmoothSpeed);
        }
    }

    void OnCollisionEnter2D(Collision2D collision)
    {
        if (Time.time - lastBounceTime < bounceCooldown) return;

        Vector2 bounceDirection = collision.contacts[0].normal;
        rb.AddForce(bounceDirection * bounceForce, ForceMode2D.Impulse);
        lastBounceTime = Time.time;

        if (collision.gameObject.CompareTag("Hazard"))
        {
            SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);
        }
    }
}
