using UnityEngine;
using UnityEngine.SceneManagement;

[RequireComponent(typeof(Rigidbody2D))]
public class Player : MonoBehaviour
{
    public float thrustForce = 1f;           // How hard you push forward
    public float rotationSpeed = 100f;       // How fast you rotate
    public float maxSpeed = 5f;              // Speed limit


    public float bounceForce = 5f;           // Extra bounce impulse on collision
    public float bounceCooldown = 0.1f;

    private Rigidbody2D rb;
    private float lastBounceTime;

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
    }

    void Update()
    {
        Rotate();
    }

    void FixedUpdate()
    {
        ApplyThrust();
        LimitSpeed();
    }

    void Rotate()
    {
        float rotateInput = Input.GetAxis("Horizontal"); // A/D or Left/Right
        transform.Rotate(0, 0, rotateInput * rotationSpeed * Time.deltaTime);
    }

    void ApplyThrust()
    {
        float thrustInput = Input.GetAxis("Vertical"); // W/S or Up/Down
        Vector2 force = transform.right * thrustInput * thrustForce;
        rb.AddForce(force);
    }

    void LimitSpeed()
    {
        if (rb.linearVelocity.magnitude > maxSpeed)
        {
            rb.linearVelocity = rb.linearVelocity.normalized * maxSpeed;
        }
    }

   void OnCollisionEnter2D(Collision2D collision)
    {
        if (Time.time - lastBounceTime < bounceCooldown) return;

        Vector2 bounceDirection = collision.contacts[0].normal;
        rb.AddForce(bounceDirection * bounceForce, ForceMode2D.Impulse);
        lastBounceTime = Time.time;

        // Optional: Only reload scene if it's a hazard
        if (collision.gameObject.CompareTag("Hazard"))
        {
            SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);
        }
    }
}
