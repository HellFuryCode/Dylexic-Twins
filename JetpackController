using UnityEngine;

public class JetpackController : MonoBehaviour
{
    public Transform jetDirection;
    public float jetBoostForce = 10f;
    public float fuelDrainRate = 15f;
    public float fuelRechargeRate = 5f;
    public float maxFuel = 100f;
    public float fuel = 100f;

    private Rigidbody2D rb;
    private bool isJetpackActive = false;

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
    }

    void Update()
    {
        ToggleJetpack();
    }

    void FixedUpdate()
    {
        if (isJetpackActive && fuel > 0f && Input.GetKey(KeyCode.W))
        {
            if (jetDirection != null)
            {
                Vector2 jetForce = (jetDirection.position - transform.position).normalized * jetBoostForce;
                rb.AddForce(jetForce);

                fuel -= fuelDrainRate * Time.fixedDeltaTime;
                fuel = Mathf.Max(fuel, 0f);
            }
        }
        else
        {
            fuel += fuelRechargeRate * Time.fixedDeltaTime;
            fuel = Mathf.Min(fuel, maxFuel);
        }
    }

    void ToggleJetpack()
    {
        if (Input.GetKeyDown(KeyCode.LeftShift))
        {
            isJetpackActive = !isJetpackActive;
            Debug.Log("Jetpack: " + (isJetpackActive ? "Activated" : "Deactivated"));
        }
    }

    public float GetFuelPercent()
    {
        return fuel / maxFuel;
    }

    public bool IsJetpackActive()
    {
        return isJetpackActive;
    }
}
